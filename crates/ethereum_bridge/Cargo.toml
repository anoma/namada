[package]
name = "namada_ethereum_bridge"
description = "The Namada Ethereum bridge library crate"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[features]
default = []
namada-eth-bridge = []
testing = [
    "namada_account",
    "namada_core/testing",
    "namada_state/testing",
    "namada_governance",
]
migrations = [
    "namada_migrations",
    "linkme",
]

[dependencies]
namada_account = {path = "../account", optional = true}
namada_core = {path = "../core", default-features = false, features = ["ethers-derive"]}
namada_events = { path = "../events", default-features = false }
namada_governance = {path = "../governance", optional = true}
namada_macros = {path = "../macros"}
namada_migrations = {path = "../migrations", optional = true}
namada_parameters = {path = "../parameters"}
namada_proof_of_stake = {path = "../proof_of_stake", default-features = false}
namada_state = {path = "../state"}
namada_storage = {path = "../storage"}
namada_systems = { path = "../systems" }
namada_trans_token = {path = "../trans_token"}
namada_tx = {path = "../tx"}
namada_vote_ext = {path = "../vote_ext"}
namada_vp_env = {path = "../vp_env"}

borsh.workspace = true
ethers.workspace = true
eyre.workspace = true
itertools.workspace = true
konst.workspace = true
linkme = {workspace = true, optional = true}
serde.workspace = true
smooth-operator.workspace = true
thiserror.workspace = true
tracing = "0.1.30"

[dev-dependencies]
namada_account = {path = "../account"}
namada_core = {path = "../core", default-features = false, features = ["ethers-derive", "testing"]}
namada_gas = {path = "../gas"}
namada_governance = {path = "../governance"}
namada_proof_of_stake = {path = "../proof_of_stake", default-features = false, features = ["testing"]}
namada_state = { path = "../state", features = ["testing"] }
namada_token = {path = "../token", features = ["testing"]}
namada_tx = {path = "../tx", features = ["testing"]}
namada_vm = {path = "../vm", features = ["testing"]}
namada_vp = {path = "../vp"}

assert_matches.workspace = true
data-encoding.workspace = true
ethabi.workspace = true
proptest.workspace = true
rand.workspace = true
toml.workspace = true
