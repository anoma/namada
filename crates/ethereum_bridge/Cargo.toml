[package]
name = "namada_ethereum_bridge"
description = "The Namada Ethereum bridge library crate"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true
rust-version.workspace = true

[features]
default = []
namada-eth-bridge = []
testing = [
    "namada_account",
    "namada_core/testing",
    "namada_state/testing",
    "namada_governance",
]
migrations = ["namada_migrations", "linkme"]

[dependencies]
namada_account = { workspace = true, optional = true }
namada_core = { workspace = true, features = ["ethers-derive"] }
namada_events.workspace = true
namada_governance = { workspace = true, optional = true }
namada_macros.workspace = true
namada_migrations = { workspace = true, optional = true }
namada_parameters.workspace = true
namada_proof_of_stake.workspace = true
namada_state.workspace = true
namada_storage.workspace = true
namada_systems.workspace = true
namada_trans_token.workspace = true
namada_tx.workspace = true
namada_vote_ext.workspace = true
namada_vp_env.workspace = true

borsh.workspace = true
ethers.workspace = true
eyre.workspace = true
itertools.workspace = true
konst.workspace = true
linkme = { workspace = true, optional = true }
serde.workspace = true
smooth-operator.workspace = true
thiserror.workspace = true
tracing.workspace = true

[dev-dependencies]
namada_account.path = "../account"
namada_core = { path = "../core", features = ["ethers-derive", "testing"] }
namada_gas.path = "../gas"
namada_governance.path = "../governance"
namada_proof_of_stake = { path = "../proof_of_stake", features = ["testing"] }
namada_state = { path = "../state", features = ["testing"] }
namada_token = { path = "../token", features = ["testing"] }
namada_tx = { path = "../tx", features = ["testing"] }
namada_vm = { path = "../vm", default-features = true, features = ["testing"] }
namada_vp.workspace = true

assert_matches.workspace = true
data-encoding.workspace = true
ethabi.workspace = true
proptest.workspace = true
rand.workspace = true
toml.workspace = true
