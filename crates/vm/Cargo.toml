[package]
name = "namada_vm"
description = "The Namada VM"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[features]
default = ["wasm-runtime", "wasm-jit"]
wasm-jit = ["wasmer/sys-default"]
wasm-interpret = ["wasmer/wasmi"]
wasm-runtime = [
  "parity-wasm",
  "rayon",
  "wasm-instrument",
  "wasmer-cache",
  "wasmer-compiler-singlepass",
  "wasmer-vm",
  "wasmer",
]
testing = [
  "namada_account/testing",
  "namada_core/testing",
  "tempfile",
]

[dependencies]
namada_account = { path = "../account" }
namada_core = { path = "../core", features = ["control_flow"] }
namada_events = { path = "../events", default-features = false }
namada_gas = { path = "../gas" }
namada_parameters = { path = "../parameters" }
namada_state = { path = "../state" }
namada_token = { path = "../token" }
namada_tx = { path = "../tx" }
namada_vp = { path = "../vp" }

borsh.workspace = true
clru.workspace = true
parity-wasm = { version = "0.45.0", features = ["sign_ext"], optional = true }
rayon = { version = "=1.5.3", optional = true }
smooth-operator.workspace = true
tempfile = { version = "3.2.0", optional = true }
thiserror.workspace = true
tracing.workspace = true
wasm-instrument = { workspace = true, optional = true }
wasmer = { workspace = true, optional = true, default-features = false }
wasmer-cache = { workspace = true, optional = true }
wasmer-compiler-singlepass = { workspace = true, optional = true }
wasmer-vm = { workspace = true, optional = true }
wasmparser.workspace = true

[dev-dependencies]
namada_core = { path = "../core", default-features = false, features = [
  "testing",
] }
namada_state = { path = "../state", features = ["testing"] }
namada_test_utils = { path = "../test_utils" }
namada_tx = { path = "../tx", features = ["testing"] }

assert_matches.workspace = true
byte-unit.workspace = true
itertools.workspace = true
tempfile.workspace = true
test-log.workspace = true
wasmer-compiler = { workspace = true }
wasmer-types = { workspace = true }
