[package]
name = "namada_governance"
description = "Namada governance"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[features]
testing = ["proptest"]
arbitrary = ["dep:arbitrary", "namada_core/arbitrary"]
migrations = [
    "namada_migrations",
    "linkme",
]

[dependencies]
namada_account = { path = "../account" }
namada_core = { path = "../core" }
namada_events = { path = "../events", default-features = false }
namada_macros = { path = "../macros" }
namada_migrations = { path= "../migrations", optional = true }
namada_state = { path = "../state" }
namada_systems = { path = "../systems" }
namada_tx = { path = "../tx" }
namada_vp = { path = "../vp" }

arbitrary = { workspace = true, optional = true }
borsh.workspace = true
itertools.workspace = true
linkme = {workspace = true, optional = true}
konst.workspace = true
proptest = { workspace = true, optional = true }
serde_json.workspace = true
serde.workspace = true
smooth-operator.workspace = true
thiserror.workspace = true
tracing.workspace = true


[dev-dependencies]
namada_core = { path = "../core", default-features = false, features = ["testing"] }
namada_gas = { path = "../gas" }
namada_parameters = { path = "../parameters" }
namada_proof_of_stake = { path = "../proof_of_stake", features = ["testing"] }
namada_state = { path = "../state", features = ["testing"] }
namada_token = { path = "../token", features = ["testing"] }
namada_tx = { path = "../tx", features = ["testing"] }
namada_vm = { path = "../vm", features = ["testing"] }

assert_matches.workspace = true
proptest.workspace = true
