[package]
name = "namada_proof_of_stake"
description = "Namada Proof of Stake system"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true
rust-version.workspace = true

[features]
default = []
# testing helpers
testing = ["proptest", "namada_core/testing"]
migrations = ["namada_migrations", "linkme"]

[dependencies]
namada_account.workspace = true
namada_controller.workspace = true
namada_core.workspace = true
namada_events.workspace = true
namada_macros.workspace = true
namada_migrations = { workspace = true, optional = true }
namada_state.workspace = true
namada_systems.workspace = true
namada_tx.workspace = true
namada_vp_env.workspace = true

borsh.workspace = true
konst.workspace = true
itertools.workspace = true
linkme = { workspace = true, optional = true }
once_cell.workspace = true
proptest = { workspace = true, optional = true }
serde.workspace = true
smooth-operator.workspace = true
thiserror.workspace = true
tracing.workspace = true

[dev-dependencies]
namada_core = { path = "../core", features = ["testing"] }
namada_events = { path = "../events", features = ["testing"] }
namada_governance.path = "../governance"
namada_parameters.path = "../parameters"
namada_state = { path = "../state", features = ["testing"] }
namada_trans_token.path = "../trans_token"

assert_matches.workspace = true
itertools.workspace = true
proptest.workspace = true
proptest-state-machine.workspace = true
test-log.workspace = true
tracing-subscriber.workspace = true
pretty_assertions.workspace = true
derivative.workspace = true
yansi.workspace = true
