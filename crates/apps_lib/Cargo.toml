[package]
name = "namada_apps_lib"
description = "Namada CLI apps library code"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[features]
default = ["migrations"]
mainnet = [
  "namada_sdk/mainnet",
]
# for integration tests and test utilities
testing = ["namada_test_utils", "lazy_static", "namada_sdk/testing"]
benches = ["namada_test_utils", "lazy_static", "namada_sdk/benches"]
integration = []
migrations = [
  "namada_migrations",
  "namada_sdk/migrations",
  "linkme"
]
namada-eth-bridge = [
  "namada_sdk/namada-eth-bridge",
]

[dependencies]
namada_core = {path = "../core"}
namada_macros = {path = "../macros"}
namada_migrations = {path = "../migrations", optional = true}
namada_sdk = {path = "../sdk", features = ["download-params", "multicore"]}
namada_test_utils = {path = "../test_utils", optional = true}
namada_vm = {path = "../vm"}

async-trait.workspace = true
base64.workspace = true
borsh.workspace = true
borsh-ext.workspace = true
clap.workspace = true
color-eyre.workspace = true
config.workspace = true
data-encoding.workspace = true
derivative.workspace = true
directories.workspace = true
either.workspace = true
eyre.workspace = true
fd-lock.workspace = true
flate2.workspace = true
futures.workspace = true
itertools.workspace = true
kdam.workspace = true
lazy_static = { workspace = true, optional = true }
linkme = { workspace = true, optional = true }
ledger-lib = { workspace = true }
ledger-namada-rs.workspace = true
ledger-transport.workspace = true
ledger-transport-hid.workspace = true
masp_primitives = { workspace = true, features = ["transparent-inputs"] }
prost.workspace = true
rand_core = { workspace = true, features = ["std"] }
rand = { workspace = true, features = ["std"] }
reqwest.workspace = true
rpassword.workspace = true
serde_json = {workspace = true, features = ["raw_value"]}
serde.workspace = true
sha2.workspace = true
tar.workspace = true
tempfile.workspace = true
tendermint-config.workspace = true
tendermint-rpc = { workspace = true, features = ["http-client"] }
textwrap-macros = "0.3.0"
thiserror.workspace = true
tokio = {workspace = true, features = ["full"]}
toml.workspace = true
tracing-appender.workspace = true
tracing-log.workspace = true
tracing-subscriber = { workspace = true, features = ["std", "json", "ansi", "tracing-log"]}
tracing.workspace = true
zeroize.workspace = true

[dev-dependencies]
namada_sdk = {path = "../sdk", features = ["testing"]}
namada_test_utils = {path = "../test_utils"}

assert_matches.workspace = true
bit-set.workspace = true
proptest.workspace = true
test-log.workspace = true
tokio-test.workspace = true
lazy_static.workspace= true
pretty_assertions.workspace = true

[build-dependencies]
git2.workspace = true
