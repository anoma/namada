[package]
name = "namada_shielded_token"
description = "Namada shielded token"
resolver = "2"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true
rust-version.workspace = true

[features]
default = []
std = ["download-params", "multicore"]
async-send = ["namada_io/async-send"]
mainnet = []
migrations = ["namada_migrations", "linkme"]
multicore = ["dep:rayon"]
testing = [
  "multicore",
  "namada_core/testing",
  "namada_tx/testing",
  "masp_primitives/test-dependencies",
  "proptest",
  "std",
]
download-params = ["masp_proofs/download-params"]
masp = [
  "namada_io",
  "namada_wallet",
  "namada_core/control_flow",
  "namada_core/task_env",
  "flume",
]

[dependencies]
namada_account.workspace = true
namada_controller.workspace = true
namada_core.workspace = true
namada_events.workspace = true
namada_gas.workspace = true
namada_io = { workspace = true, optional = true }
namada_macros.workspace = true
namada_migrations = { workspace = true, optional = true }
namada_state.workspace = true
namada_systems.workspace = true
namada_tx.workspace = true
namada_vp_env.workspace = true
namada_wallet = { workspace = true, optional = true }

async-trait.workspace = true
borsh.workspace = true
eyre.workspace = true
futures.workspace = true
flume = { workspace = true, optional = true }
itertools.workspace = true
lazy_static.workspace = true
linkme = { workspace = true, optional = true }
masp_primitives.workspace = true
masp_proofs.workspace = true
proptest = { workspace = true, optional = true }
rand.workspace = true
rand_core.workspace = true
rayon = { workspace = true, optional = true }
ripemd.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
smooth-operator.workspace = true
tempfile.workspace = true
thiserror.workspace = true
tracing.workspace = true
typed-builder.workspace = true
xorf.workspace = true


[dev-dependencies]
namada_gas.path = "../gas"
namada_governance = { path = "../governance", features = ["testing"] }
namada_ibc = { path = "../ibc", features = ["testing"] }
namada_parameters = { path = "../parameters", features = ["testing"] }
namada_state = { path = "../state", features = ["testing"] }
namada_trans_token.path = "../trans_token"
namada_tx = { path = "../tx", features = ["testing"] }
namada_vm = { path = "../vm", default-features = true, features = ["testing"] }
namada_vp.path = "../vp"

lazy_static.workspace = true
masp_primitives = { workspace = true, features = ["test-dependencies"] }
masp_proofs = { workspace = true, features = ["download-params"] }
proptest.workspace = true
rand_core.workspace = true
rayon.workspace = true
tendermint-rpc.workspace = true
test-log.workspace = true
tokio.workspace = true
